#https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/slim/python/slim/nets/inception_v3.py#L255
from keras.layers.convolutional import Conv2D, MaxPooling2D, AveragePooling2D
from keras.layers.core import Dense, Flatten
from keras.optimizers import RMSprop
from keras.models import Sequential
from keras.layers import Merge

height = 100
width = 221
channels = 7

def inception_v3():
    model = Sequential()
    model.add(Conv2D(32, 3, 3, border_mode='valid', strides=2, activation='relu', input_shape=(height, width, channels)))
    model.add(Conv2D(32, 3, 3, border_mode='valid', activation='relu'))
    model.add(Conv2D(32, 3, 3, border_mode='same', activation='relu'))
    model.add(MaxPooling2D(pool_size=(3, 3), strides=(2, 2), border_mode='valid'))
    model.add(Conv2D(80, 1, 1, border_mode='valid', activation='relu'))
    model.add(Conv2D(192, 3, 3, border_mode='valid', activation='relu'))
    model.add(MaxPooling2D(pool_size=(3, 3), strides=(2, 2), border_mode='valid'))
    # Mixed_5b
    branch0 = Sequential()
    branch0.add(Conv2D(64, 1, 1, border_mode='same', activation='relu'))
    branch1 = Sequential()
    branch1.add(Conv2D(48, 1, 1, border_mode='same', activation='relu'))
    branch1.add(Conv2D(64, 5, 5, border_mode='same', activation='relu'))
    branch2 = Sequential()
    branch2.add(Conv2D(64, 1, 1, border_mode='same', activation='relu'))
    branch2.add(Conv2D(96, 3, 3, border_mode='same', activation='relu'))
    branch2.add(Conv2D(96, 3, 3, border_mode='same', activation='relu'))
    branch3 = Sequential()
    branch3.add(AveragePooling2D(pool_size=(3, 3), strides=1, border_mode='same'))
    branch3.add(Conv2D(32, 1, 1, border_mode='same', activation='relu'))
    model.add(Merge([branch0, branch1, branch2, branch3], mode='concat'))
    # Mixed_5c
    branch0 = Sequential()
    branch0.add(Conv2D(64, 1, 1, border_mode='same', activation='relu'))
    branch1 = Sequential()
    branch1.add(Conv2D(48, 1, 1, border_mode='same', activation='relu'))
    branch1.add(Conv2D(64, 5, 5, border_mode='same', activation='relu'))
    branch2 = Sequential()
    branch2.add(Conv2D(64, 1, 1, border_mode='same', activation='relu'))
    branch2.add(Conv2D(96, 3, 3, border_mode='same', activation='relu'))
    branch2.add(Conv2D(96, 3, 3, border_mode='same', activation='relu'))
    branch3 = Sequential()
    branch3.add(AveragePooling2D(pool_size=(3, 3), strides=1, border_mode='same'))
    branch3.add(Conv2D(64, 1, 1, border_mode='same', activation='relu'))
    model.add(Merge([branch0, branch1, branch2, branch3], mode='concat'))
    # Mixed_5d
    branch0 = Sequential()
    branch0.add(Conv2D(64, 1, 1, border_mode='same', activation='relu'))
    branch1 = Sequential()
    branch1.add(Conv2D(48, 1, 1, border_mode='same', activation='relu'))
    branch1.add(Conv2D(64, 5, 5, border_mode='same', activation='relu'))
    branch2 = Sequential()
    branch2.add(Conv2D(64, 1, 1, border_mode='same', activation='relu'))
    branch2.add(Conv2D(96, 3, 3, border_mode='same', activation='relu'))
    branch2.add(Conv2D(96, 3, 3, border_mode='same', activation='relu'))
    branch3 = Sequential()
    branch3.add(AveragePooling2D(pool_size=(3, 3), strides=1, border_mode='same'))
    branch3.add(Conv2D(64, 1, 1, border_mode='same', activation='relu'))
    model.add(Merge([branch0, branch1, branch2, branch3], mode='concat'))
    # Mixed_6a
    branch0 = Sequential()
    branch0.add(Conv2D(384, 3, 3, border_mode='valid', strides=2, activation='relu'))
    branch1 = Sequential()
    branch1.add(Conv2D(64, 1, 1, border_mode='same', activation='relu'))
    branch1.add(Conv2D(96, 3, 3, border_mode='same', activation='relu'))
    branch1.add(Conv2D(96, 3, 3, border_mode='valid', strides=2, activation='relu'))
    branch2 = Sequential()
    branch2.add(MaxPooling2D(pool_size=(3, 3), strides=2, border_mode='valid'))
    model.add(Merge([branch0, branch1, branch2], mode='concat'))
    # Mixed_6b
    branch0 = Sequential()
    branch0.add(Conv2D(192, 1, 1, border_mode='same', activation='relu'))
    branch1 = Sequential()
    branch1.add(Conv2D(128, 1, 1, border_mode='same', activation='relu'))
    branch1.add(Conv2D(128, 1, 7, border_mode='same', activation='relu'))
    branch1.add(Conv2D(192, 7, 1, border_mode='same', activation='relu'))
    branch2 = Sequential()
    branch2.add(Conv2D(128, 1, 1, border_mode='same', activation='relu'))
    branch2.add(Conv2D(128, 7, 1, border_mode='same', activation='relu'))
    branch2.add(Conv2D(128, 1, 7, border_mode='same', activation='relu'))
    branch2.add(Conv2D(128, 7, 1, border_mode='same', activation='relu'))
    branch2.add(Conv2D(192, 1, 7, border_mode='same', activation='relu'))
    branch3 = Sequential()
    branch3.add(AveragePooling2D(pool_size=(3, 3), strides=1, border_mode='same'))
    branch3.add(Conv2D(192, 1, 1, border_mode='same', activation='relu'))
    model.add(Merge([branch0, branch1, branch2, branch3], mode='concat'))
    # Mixed_6c
    branch0 = Sequential()
    branch0.add(Conv2D(192, 1, 1, border_mode='same', activation='relu'))
    branch1 = Sequential()
    branch1.add(Conv2D(160, 1, 1, border_mode='same', activation='relu'))
    branch1.add(Conv2D(160, 1, 7, border_mode='same', activation='relu'))
    branch1.add(Conv2D(192, 7, 1, border_mode='same', activation='relu'))
    branch2 = Sequential()
    branch2.add(Conv2D(160, 1, 1, border_mode='same', activation='relu'))
    branch2.add(Conv2D(160, 7, 1, border_mode='same', activation='relu'))
    branch2.add(Conv2D(160, 1, 7, border_mode='same', activation='relu'))
    branch2.add(Conv2D(160, 7, 1, border_mode='same', activation='relu'))
    branch2.add(Conv2D(160, 1, 7, border_mode='same', activation='relu'))
    branch3 = Sequential()
    branch3.add(AveragePooling2D(pool_size=(3, 3), strides=1, border_mode='same'))
    branch3.add(Conv2D(192, 1, 1, border_mode='same', activation='relu'))
    model.add(Merge([branch0, branch1, branch2, branch3], mode='concat'))
    # Mixed_6d
    branch0 = Sequential()
    branch0.add(Conv2D(192, 1, 1, border_mode='same', activation='relu'))
    branch1 = Sequential()
    branch1.add(Conv2D(160, 1, 1, border_mode='same', activation='relu'))
    branch1.add(Conv2D(160, 1, 7, border_mode='same', activation='relu'))
    branch1.add(Conv2D(192, 7, 1, border_mode='same', activation='relu'))
    branch2 = Sequential()
    branch2.add(Conv2D(160, 1, 1, border_mode='same', activation='relu'))
    branch2.add(Conv2D(160, 7, 1, border_mode='same', activation='relu'))
    branch2.add(Conv2D(160, 1, 7, border_mode='same', activation='relu'))
    branch2.add(Conv2D(160, 7, 1, border_mode='same', activation='relu'))
    branch2.add(Conv2D(192, 1, 7, border_mode='same', activation='relu'))
    branch3 = Sequential()
    branch3.add(AveragePooling2D(pool_size=(3, 3), strides=1, border_mode='same'))
    branch3.add(Conv2D(192, 1, 1, border_mode='same', activation='relu'))
    model.add(Merge([branch0, branch1, branch2, branch3], mode='concat'))
    # Mixed_6e
    branch0 = Sequential()
    branch0.add(Conv2D(192, 1, 1, border_mode='same', activation='relu'))
    branch1 = Sequential()
    branch1.add(Conv2D(192, 1, 1, border_mode='same', activation='relu'))
    branch1.add(Conv2D(192, 1, 7, border_mode='same', activation='relu'))
    branch1.add(Conv2D(192, 7, 1, border_mode='same', activation='relu'))
    branch2 = Sequential()
    branch2.add(Conv2D(192, 1, 1, border_mode='same', activation='relu'))
    branch2.add(Conv2D(192, 7, 1, border_mode='same', activation='relu'))
    branch2.add(Conv2D(192, 1, 7, border_mode='same', activation='relu'))
    branch2.add(Conv2D(192, 7, 1, border_mode='same', activation='relu'))
    branch2.add(Conv2D(192, 1, 7, border_mode='same', activation='relu'))
    branch3 = Sequential()
    branch3.add(AveragePooling2D(pool_size=(3, 3), strides=1, border_mode='same'))
    branch3.add(Conv2D(192, 1, 1, border_mode='same', activation='relu'))
    model.add(Merge([branch0, branch1, branch2, branch3], mode='concat'))
    # Mixed_7a
    branch0 = Sequential()
    branch0.add(Conv2D(192, 1, 1, border_mode='same', activation='relu'))
    branch0.add(Conv2D(320, 3, 3, border_mode='valid', strides=2, activation='relu'))
    branch1 = Sequential()
    branch1.add(Conv2D(192, 1, 1, border_mode='same', activation='relu'))
    branch1.add(Conv2D(192, 1, 7, border_mode='same', activation='relu'))
    branch1.add(Conv2D(192, 7, 1, border_mode='same', activation='relu'))
    branch1.add(Conv2D(192, 3, 3, border_mode='valid', strides=2, activation='relu'))
    branch2 = Sequential()
    branch2.add(MaxPooling2D(pool_size=(3, 3), strides=2, border_mode='valid'))
    model.add(Merge([branch0, branch1, branch2], mode='concat'))
    # Mixed_7b
    branch0 = Sequential()
    branch0.add(Conv2D(320, 1, 1, border_mode='same', activation='relu'))
    branch1 = Sequential()
    branch1.add(Conv2D(384, 1, 1, border_mode='same', activation='relu'))
    branch1_1 = Sequential()
    branch1_1.add(Conv2D(384, 1, 3, border_mode='same', activation='relu'))
    branch1_2 = Sequential()
    branch1_2.add(Conv2D(384, 3, 1, border_mode='same', activation='relu'))
    branch1.add(Merge([branch1_1, branch1_2], mode='concat'))
    branch2 = Sequential()
    branch2.add(Conv2D(448, 1, 1, border_mode='same', activation='relu'))
    branch2.add(Conv2D(384, 3, 3, border_mode='same', activation='relu'))
    branch2_1 = Sequential()
    branch2_1.add(Conv2D(384, 1, 3, border_mode='same', activation='relu'))
    branch2_2 = Sequential()
    branch2_2.add(Conv2D(384, 3, 1, border_mode='same', activation='relu'))
    branch2.add(Merge([branch1_1, branch1_2], mode='concat'))
    branch3 = Sequential()
    branch3.add(AveragePooling2D(pool_size=(3, 3), strides=1, border_mode='same'))
    branch3.add(Conv2D(192, 1, 1, border_mode='same', activation='relu'))
    model.add(Merge([branch0, branch1, branch2, branch3], mode='concat'))
    # Mixed_7c
    branch0 = Sequential()
    branch0.add(Conv2D(320, 1, 1, border_mode='same', activation='relu'))
    branch1 = Sequential()
    branch1.add(Conv2D(384, 1, 1, border_mode='same', activation='relu'))
    branch1_1 = Sequential()
    branch1_1.add(Conv2D(384, 1, 3, border_mode='same', activation='relu'))
    branch1_2 = Sequential()
    branch1_2.add(Conv2D(384, 3, 1, border_mode='same', activation='relu'))
    branch1.add(Merge([branch1_1, branch1_2], mode='concat'))
    branch2 = Sequential()
    branch2.add(Conv2D(448, 1, 1, border_mode='same', activation='relu'))
    branch2.add(Conv2D(384, 3, 3, border_mode='same', activation='relu'))
    branch2_1 = Sequential()
    branch2_1.add(Conv2D(384, 1, 3, border_mode='same', activation='relu'))
    branch2_2 = Sequential()
    branch2_2.add(Conv2D(384, 3, 1, border_mode='same', activation='relu'))
    branch2.add(Merge([branch1_1, branch1_2], mode='concat'))
    branch3 = Sequential()
    branch3.add(AveragePooling2D(pool_size=(3, 3), strides=1, border_mode='same'))
    branch3.add(Conv2D(192, 1, 1, border_mode='same', activation='relu'))
    model.add(Merge([branch0, branch1, branch2, branch3], mode='concat'))
    model.add(AveragePooling2D(pool_size=(8, 8), border_mode='valid'))
    model.add(Flatten())
    model.add(Dense(3, activation='softmax'))
    rms = RMSprop(lr=0.001, rho=0.9, epsilon=1.0, decay=0.9)
    model.compile(loss='categorical_crossentropy', optimizer=rms, metrics=['accuracy'])
    return model